/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package sistem;

import com.formdev.flatlaf.FlatClientProperties;
import java.awt.Color;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.HashSet;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JTextField;
import koneksi.koneksiStock;
import customization.cResetter;
import java.text.ParseException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BorderFactory;
import javax.swing.UIManager;

/**
 *
 * @author thowie
 */
public final class stockPenjualan extends javax.swing.JPanel {

    private static HashSet<String> existingKodes;

    // retrieve customer id on the database to prevent adding the same id
    private void existingValuesLoader() {
        // Clearing the exixtingValues
        if (existingKodes != null) {
            existingKodes.clear();
        }

        // Initialize the existingValues set by loading the IDs from the database
        existingKodes = new HashSet<>();

        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            try (Connection conn = (Connection) koneksi.database.dbConfig()) {
                Statement stmt = conn.createStatement();

                String sql = "CREATE TABLE IF NOT EXISTS stock_penjualan ("
                        + "produk VARCHAR(255) NOT NULL, "
                        + "kode VARCHAR(255) NOT NULL, "
                        + "stock INT NOT NULL, "
                        + "harga DECIMAL(10, 2) NOT NULL, "
                        + "PRIMARY KEY (kode) )";
                stmt.executeUpdate(sql);

                ResultSet rs = stmt.executeQuery("SELECT * FROM stock_penjualan");
                while (rs.next()) {
                    existingKodes.add(rs.getString("kode"));
                }
            }
        } catch (ClassNotFoundException | SQLException e) {
            e.printStackTrace();
        }
    }

    // Generate the next customer ID
    public String generateProductKode() {
        String prefix = "PC";
        int num = 1;
        while (true) {
            String code = prefix + String.format("%03d", num);
            if (!existingKodes.contains(code)) {
                existingKodes.add(code);
                return code;
            }
            num++;
        }
    }

    String currentText;

    public void setNull(JTextField textField, String nulledText) {
        textField.setForeground(Color.BLACK);
        currentText = textField.getText();
        if (currentText.equals(nulledText)) {
            textField.setText(null);
        }
    }

    public void setFill(JTextField textField, String textToSet) {
        currentText = textField.getText();
        if (currentText.isEmpty()) {
            textField.setForeground(Color.lightGray);
            textField.setText(textToSet);
        }
    }

    koneksiStock stock = new koneksiStock();
    numberField setNumber = new numberField();

    /**
     * Creates new form dataPenjualan
     */
    public stockPenjualan() throws ParseException {
        initComponents();
        cResetter.makeTableNonEditable(loadStock);
        existingValuesLoader();
        stock.loadStockPenjualan(loadStock);
        setNumber.intNumber(new JTextField[]{jBarang});
        setNumber.doubleNumber(new JTextField[]{hBarang});
        stock.setColumnWidth(loadStock);

        // Set the permission settings
        new customization.cResetter().setBlockedButton(new JButton[]{btnInsert, btnUpdate, btnDelete});
        
        nBarang.putClientProperty(FlatClientProperties.PLACEHOLDER_TEXT,"Nama produk");
        queryProduct.putClientProperty(FlatClientProperties.PLACEHOLDER_TEXT,"Masukkan produk, kode, stock...");
        jBarang.putClientProperty(FlatClientProperties.PLACEHOLDER_TEXT,"0");
        hBarang.putClientProperty(FlatClientProperties.PLACEHOLDER_TEXT,"0.0");
        title.putClientProperty(FlatClientProperties.STYLE, ""
                + "foreground:$SalesTracking;"
                + "font: 70% bold $h00.font");
        JLabel[] labels = new JLabel[]{jLabel2,jLabel3,jLabel4,jLabel5,jLabel6};
        for (var label : labels){
            label.putClientProperty(FlatClientProperties.STYLE, ""
                + "font: $semibold.font");
        }
        
        jPanel1.setBorder(BorderFactory.createLineBorder(UIManager.getColor("Title.borderColor")));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        title = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        nBarang = new javax.swing.JTextField();
        kBarang = new javax.swing.JTextField();
        jBarang = new javax.swing.JTextField();
        hBarang = new javax.swing.JTextField();
        btnInsert = new customization.cButton();
        btnUpdate = new customization.cButton();
        btnDelete = new customization.cButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        queryProduct = new javax.swing.JTextField();
        btnClear = new customization.cButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        loadStock = new javax.swing.JTable();

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        title.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        title.setText("STOCK PENJUALAN");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(244, 244, 244)
                .addComponent(title, javax.swing.GroupLayout.DEFAULT_SIZE, 335, Short.MAX_VALUE)
                .addGap(243, 243, 243))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(title, javax.swing.GroupLayout.DEFAULT_SIZE, 29, Short.MAX_VALUE)
        );

        nBarang.setToolTipText("Masukkan nama produk");

        kBarang.setEditable(false);
        kBarang.setText("Otomatis");
        kBarang.setToolTipText("Automatically generated");
        kBarang.setFocusable(false);

        jBarang.setText("0");
        jBarang.setToolTipText("Masukkan stock produk");

        hBarang.setText("0.0");
        hBarang.setToolTipText("Masukkan harga produk");

        btnInsert.setBackground(new java.awt.Color(153, 153, 0));
        btnInsert.setText("Insert");
        btnInsert.setCustomCurrentFill(new java.awt.Color(30, 150, 0));
        btnInsert.setCustomHovering(new java.awt.Color(20, 130, 0));
        btnInsert.setCustomPressedFill(new java.awt.Color(0, 102, 0));
        btnInsert.setFont(new java.awt.Font("Verdana", 0, 13)); // NOI18N
        btnInsert.setPreferredSize(new java.awt.Dimension(47, 17));
        btnInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertActionPerformed(evt);
            }
        });

        btnUpdate.setText("Update");
        btnUpdate.setCustomCurrentFill(new java.awt.Color(0, 51, 255));
        btnUpdate.setCustomHovering(new java.awt.Color(51, 51, 255));
        btnUpdate.setCustomPressedFill(new java.awt.Color(0, 0, 153));
        btnUpdate.setFont(new java.awt.Font("Verdana", 0, 13)); // NOI18N
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.setCustomCurrentFill(new java.awt.Color(255, 0, 0));
        btnDelete.setCustomHovering(new java.awt.Color(204, 0, 51));
        btnDelete.setCustomPressedFill(new java.awt.Color(153, 0, 0));
        btnDelete.setFont(new java.awt.Font("Verdana", 0, 13)); // NOI18N
        btnDelete.setPreferredSize(new java.awt.Dimension(47, 17));
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Verdana", 1, 10)); // NOI18N
        jLabel2.setText("Nama Produk");

        jLabel3.setFont(new java.awt.Font("Verdana", 1, 10)); // NOI18N
        jLabel3.setText("Kode Produk");

        jLabel4.setFont(new java.awt.Font("Verdana", 1, 10)); // NOI18N
        jLabel4.setText("Stock Produk");

        jLabel5.setFont(new java.awt.Font("Verdana", 1, 10)); // NOI18N
        jLabel5.setText("Harga Produk");

        jLabel6.setFont(new java.awt.Font("Verdana", 1, 10)); // NOI18N
        jLabel6.setText("Cari");

        queryProduct.setToolTipText("");
        queryProduct.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                queryProductKeyReleased(evt);
            }
        });

        btnClear.setText("Clear");
        btnClear.setToolTipText("Clear text fields");
        btnClear.setCustomCurrentFill(new java.awt.Color(255, 102, 0));
        btnClear.setCustomHovering(new java.awt.Color(255, 51, 0));
        btnClear.setCustomPressedFill(new java.awt.Color(204, 51, 0));
        btnClear.setFont(new java.awt.Font("Verdana", 0, 13)); // NOI18N
        btnClear.setPreferredSize(new java.awt.Dimension(47, 17));
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(nBarang))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(kBarang, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jBarang, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(24, 24, 24))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(btnInsert, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel6)
                        .addGap(18, 18, 18)))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(queryProduct, javax.swing.GroupLayout.DEFAULT_SIZE, 272, Short.MAX_VALUE)
                    .addComponent(hBarang)
                    .addComponent(jLabel5))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(8, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(nBarang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(kBarang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBarang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(hBarang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnInsert, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(queryProduct, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        loadStock.setAutoCreateRowSorter(true);
        loadStock.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "No", "Nama Produk", "Kode Produk", "Stock Produk", "Harga Produk"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        loadStock.getTableHeader().setReorderingAllowed(false);
        loadStock.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                loadStockMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(loadStock);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 284, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertActionPerformed
        String kode = generateProductKode();
        JTextField[] fields = new JTextField[]{nBarang, jBarang, hBarang};
        try {
            stock.tableInsert(loadStock, kode, fields);
        } catch (ParseException ex) {
            Logger.getLogger(stockPenjualan.class.getName()).log(Level.SEVERE, null, ex);
        }
        existingValuesLoader();
    }//GEN-LAST:event_btnInsertActionPerformed

    private void loadStockMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_loadStockMouseClicked
        boolean ya = stock.haveAData;
        if (ya) {
            int baris = loadStock.rowAtPoint(evt.getPoint());
            String produk = loadStock.getValueAt(baris, 1).toString();
            nBarang.setText(produk);
            String kode = loadStock.getValueAt(baris, 2).toString();
            kBarang.setText(kode);
            stock.selectedKode = kode;
            String stok = loadStock.getValueAt(baris, 3).toString();
            jBarang.setText(stok);
            String harga = loadStock.getValueAt(baris, 4).toString();
            harga = harga.replace(",", "");
            hBarang.setText(harga);
            stock.setColumnWidth(loadStock);
        }
    }//GEN-LAST:event_loadStockMouseClicked

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        JTextField[] fields = new JTextField[]{nBarang, kBarang, jBarang, hBarang};
        try {
            stock.tableUpdate(loadStock, fields);
        } catch (ParseException ex) {
            Logger.getLogger(stockPenjualan.class.getName()).log(Level.SEVERE, null, ex);
        }
        existingValuesLoader();
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        String kode = generateProductKode();
        JTextField[] fields = new JTextField[]{nBarang, kBarang};
        try {
            stock.tableDelete(loadStock, kode, fields);
        } catch (ParseException ex) {
            Logger.getLogger(stockPenjualan.class.getName()).log(Level.SEVERE, null, ex);
        }
        existingValuesLoader();
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void queryProductKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_queryProductKeyReleased
        JTextField[] fields = new JTextField[]{queryProduct};
        try {
            stock.tableSearch(loadStock, fields);
        } catch (ParseException ex) {
            Logger.getLogger(stockPenjualan.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_queryProductKeyReleased

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        stock.resetFields(new JTextField[]{nBarang});
        jBarang.setText("0");
        hBarang.setText("0.0");
        kBarang.setText("Otomatis");
    }//GEN-LAST:event_btnClearActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private customization.cButton btnClear;
    private customization.cButton btnDelete;
    private customization.cButton btnInsert;
    private customization.cButton btnUpdate;
    private javax.swing.JTextField hBarang;
    private javax.swing.JTextField jBarang;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField kBarang;
    private javax.swing.JTable loadStock;
    private javax.swing.JTextField nBarang;
    private javax.swing.JTextField queryProduct;
    private javax.swing.JLabel title;
    // End of variables declaration//GEN-END:variables
}
